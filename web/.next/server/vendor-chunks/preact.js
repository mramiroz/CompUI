/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/preact";
exports.ids = ["vendor-chunks/preact"];
exports.modules = {

/***/ "(rsc)/./node_modules/preact/dist/preact.js":
/*!********************************************!*\
  !*** ./node_modules/preact/dist/preact.js ***!
  \********************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("var n, l, u, t, i, o, r, e, f, c, s, a, p = {}, h = [], v = /acit|ex(?:s|g|n|p|$)|rph|grid|ows|mnc|ntw|ine[ch]|zoo|^ord|itera/i, y = Array.isArray;\nfunction d(n, l) {\n    for(var u in l)n[u] = l[u];\n    return n;\n}\nfunction _(n) {\n    var l = n.parentNode;\n    l && l.removeChild(n);\n}\nfunction x(l, u, t) {\n    var i, o, r, e = {};\n    for(r in u)\"key\" == r ? i = u[r] : \"ref\" == r ? o = u[r] : e[r] = u[r];\n    if (arguments.length > 2 && (e.children = arguments.length > 3 ? n.call(arguments, 2) : t), \"function\" == typeof l && null != l.defaultProps) for(r in l.defaultProps)void 0 === e[r] && (e[r] = l.defaultProps[r]);\n    return g(l, e, i, o, null);\n}\nfunction g(n, t, i, o, r) {\n    var e = {\n        type: n,\n        props: t,\n        key: i,\n        ref: o,\n        __k: null,\n        __: null,\n        __b: 0,\n        __e: null,\n        __d: void 0,\n        __c: null,\n        constructor: void 0,\n        __v: null == r ? ++u : r,\n        __i: -1,\n        __u: 0\n    };\n    return null == r && null != l.vnode && l.vnode(e), e;\n}\nfunction k(n) {\n    return n.children;\n}\nfunction b(n, l) {\n    this.props = n, this.context = l;\n}\nfunction w(n, l) {\n    if (null == l) return n.__ ? w(n.__, n.__i + 1) : null;\n    for(var u; l < n.__k.length; l++)if (null != (u = n.__k[l]) && null != u.__e) return u.__e;\n    return \"function\" == typeof n.type ? w(n) : null;\n}\nfunction m(n) {\n    var l, u;\n    if (null != (n = n.__) && null != n.__c) {\n        for(n.__e = n.__c.base = null, l = 0; l < n.__k.length; l++)if (null != (u = n.__k[l]) && null != u.__e) {\n            n.__e = n.__c.base = u.__e;\n            break;\n        }\n        return m(n);\n    }\n}\nfunction C(n) {\n    (!n.__d && (n.__d = !0) && i.push(n) && !P.__r++ || o !== l.debounceRendering) && ((o = l.debounceRendering) || r)(P);\n}\nfunction P() {\n    var n, u, t, o, r, f, c, s;\n    for(i.sort(e); n = i.shift();)n.__d && (u = i.length, o = void 0, f = (r = (t = n).__v).__e, c = [], s = [], t.__P && ((o = d({}, r)).__v = r.__v + 1, l.vnode && l.vnode(o), L(t.__P, o, r, t.__n, void 0 !== t.__P.ownerSVGElement, 32 & r.__u ? [\n        f\n    ] : null, c, null == f ? w(r) : f, !!(32 & r.__u), s), o.__v = r.__v, o.__.__k[o.__i] = o, M(c, o, s), o.__e != f && m(o)), i.length > u && i.sort(e));\n    P.__r = 0;\n}\nfunction S(n, l, u, t, i, o, r, e, f, c, s) {\n    var a, v, y, d, _, x = t && t.__k || h, g = l.length;\n    for(u.__d = f, $(u, l, x), f = u.__d, a = 0; a < g; a++)null != (y = u.__k[a]) && \"boolean\" != typeof y && \"function\" != typeof y && (v = -1 === y.__i ? p : x[y.__i] || p, y.__i = a, L(n, y, v, i, o, r, e, f, c, s), d = y.__e, y.ref && v.ref != y.ref && (v.ref && j(v.ref, null, y), s.push(y.ref, y.__c || d, y)), null == _ && null != d && (_ = d), 65536 & y.__u || v.__k === y.__k ? (f && !f.isConnected && (f = w(v)), f = I(y, f, n)) : \"function\" == typeof y.type && void 0 !== y.__d ? f = y.__d : d && (f = d.nextSibling), y.__d = void 0, y.__u &= -196609);\n    u.__d = f, u.__e = _;\n}\nfunction $(n, l, u) {\n    var t, i, o, r, e, f = l.length, c = u.length, s = c, a = 0;\n    for(n.__k = [], t = 0; t < f; t++)r = t + a, null != (i = n.__k[t] = null == (i = l[t]) || \"boolean\" == typeof i || \"function\" == typeof i ? null : \"string\" == typeof i || \"number\" == typeof i || \"bigint\" == typeof i || i.constructor == String ? g(null, i, null, null, null) : y(i) ? g(k, {\n        children: i\n    }, null, null, null) : void 0 === i.constructor && i.__b > 0 ? g(i.type, i.props, i.key, i.ref ? i.ref : null, i.__v) : i) ? (i.__ = n, i.__b = n.__b + 1, e = H(i, u, r, s), i.__i = e, o = null, -1 !== e && (s--, (o = u[e]) && (o.__u |= 131072)), null == o || null === o.__v ? (-1 == e && a--, \"function\" != typeof i.type && (i.__u |= 65536)) : e !== r && (e === r + 1 ? a++ : e > r ? s > f - r ? a += e - r : a-- : e < r ? e == r - 1 && (a = e - r) : a = 0, e !== t + a && (i.__u |= 65536))) : (o = u[r]) && null == o.key && o.__e && 0 == (131072 & o.__u) && (o.__e == n.__d && (n.__d = w(o)), z(o, o, !1), u[r] = null, s--);\n    if (s) for(t = 0; t < c; t++)null != (o = u[t]) && 0 == (131072 & o.__u) && (o.__e == n.__d && (n.__d = w(o)), z(o, o));\n}\nfunction I(n, l, u) {\n    var t, i;\n    if (\"function\" == typeof n.type) {\n        for(t = n.__k, i = 0; t && i < t.length; i++)t[i] && (t[i].__ = n, l = I(t[i], l, u));\n        return l;\n    }\n    n.__e != l && (u.insertBefore(n.__e, l || null), l = n.__e);\n    do {\n        l = l && l.nextSibling;\n    }while (null != l && 8 === l.nodeType);\n    return l;\n}\nfunction H(n, l, u, t) {\n    var i = n.key, o = n.type, r = u - 1, e = u + 1, f = l[u];\n    if (null === f || f && i == f.key && o === f.type && 0 == (131072 & f.__u)) return u;\n    if (t > (null != f && 0 == (131072 & f.__u) ? 1 : 0)) for(; r >= 0 || e < l.length;){\n        if (r >= 0) {\n            if ((f = l[r]) && 0 == (131072 & f.__u) && i == f.key && o === f.type) return r;\n            r--;\n        }\n        if (e < l.length) {\n            if ((f = l[e]) && 0 == (131072 & f.__u) && i == f.key && o === f.type) return e;\n            e++;\n        }\n    }\n    return -1;\n}\nfunction T(n, l, u) {\n    \"-\" === l[0] ? n.setProperty(l, null == u ? \"\" : u) : n[l] = null == u ? \"\" : \"number\" != typeof u || v.test(l) ? u : u + \"px\";\n}\nfunction A(n, l, u, t, i) {\n    var o;\n    n: if (\"style\" === l) if (\"string\" == typeof u) n.style.cssText = u;\n    else {\n        if (\"string\" == typeof t && (n.style.cssText = t = \"\"), t) for(l in t)u && l in u || T(n.style, l, \"\");\n        if (u) for(l in u)t && u[l] === t[l] || T(n.style, l, u[l]);\n    }\n    else if (\"o\" === l[0] && \"n\" === l[1]) o = l !== (l = l.replace(/(PointerCapture)$|Capture$/i, \"$1\")), l = l.toLowerCase() in n || \"onFocusOut\" === l || \"onFocusIn\" === l ? l.toLowerCase().slice(2) : l.slice(2), n.l || (n.l = {}), n.l[l + o] = u, u ? t ? u.u = t.u : (u.u = f, n.addEventListener(l, o ? s : c, o)) : n.removeEventListener(l, o ? s : c, o);\n    else {\n        if (i) l = l.replace(/xlink(H|:h)/, \"h\").replace(/sName$/, \"s\");\n        else if (\"width\" != l && \"height\" != l && \"href\" != l && \"list\" != l && \"form\" != l && \"tabIndex\" != l && \"download\" != l && \"rowSpan\" != l && \"colSpan\" != l && \"role\" != l && l in n) try {\n            n[l] = null == u ? \"\" : u;\n            break n;\n        } catch (n) {}\n        \"function\" == typeof u || (null == u || !1 === u && \"-\" !== l[4] ? n.removeAttribute(l) : n.setAttribute(l, u));\n    }\n}\nfunction F(n) {\n    return function(u) {\n        if (this.l) {\n            var t = this.l[u.type + n];\n            if (null == u.t) u.t = f++;\n            else if (u.t < t.u) return;\n            return t(l.event ? l.event(u) : u);\n        }\n    };\n}\nfunction L(n, u, t, i, o, r, e, f, c, s) {\n    var a, p, h, v, _, x, g, w, m, C, P, $, I, H, T, A = u.type;\n    if (void 0 !== u.constructor) return null;\n    128 & t.__u && (c = !!(32 & t.__u), r = [\n        f = u.__e = t.__e\n    ]), (a = l.__b) && a(u);\n    n: if (\"function\" == typeof A) try {\n        if (w = u.props, m = (a = A.contextType) && i[a.__c], C = a ? m ? m.props.value : a.__ : i, t.__c ? g = (p = u.__c = t.__c).__ = p.__E : (\"prototype\" in A && A.prototype.render ? u.__c = p = new A(w, C) : (u.__c = p = new b(w, C), p.constructor = A, p.render = N), m && m.sub(p), p.props = w, p.state || (p.state = {}), p.context = C, p.__n = i, h = p.__d = !0, p.__h = [], p._sb = []), null == p.__s && (p.__s = p.state), null != A.getDerivedStateFromProps && (p.__s == p.state && (p.__s = d({}, p.__s)), d(p.__s, A.getDerivedStateFromProps(w, p.__s))), v = p.props, _ = p.state, p.__v = u, h) null == A.getDerivedStateFromProps && null != p.componentWillMount && p.componentWillMount(), null != p.componentDidMount && p.__h.push(p.componentDidMount);\n        else {\n            if (null == A.getDerivedStateFromProps && w !== v && null != p.componentWillReceiveProps && p.componentWillReceiveProps(w, C), !p.__e && (null != p.shouldComponentUpdate && !1 === p.shouldComponentUpdate(w, p.__s, C) || u.__v === t.__v)) {\n                for(u.__v !== t.__v && (p.props = w, p.state = p.__s, p.__d = !1), u.__e = t.__e, u.__k = t.__k, u.__k.forEach(function(n) {\n                    n && (n.__ = u);\n                }), P = 0; P < p._sb.length; P++)p.__h.push(p._sb[P]);\n                p._sb = [], p.__h.length && e.push(p);\n                break n;\n            }\n            null != p.componentWillUpdate && p.componentWillUpdate(w, p.__s, C), null != p.componentDidUpdate && p.__h.push(function() {\n                p.componentDidUpdate(v, _, x);\n            });\n        }\n        if (p.context = C, p.props = w, p.__P = n, p.__e = !1, $ = l.__r, I = 0, \"prototype\" in A && A.prototype.render) {\n            for(p.state = p.__s, p.__d = !1, $ && $(u), a = p.render(p.props, p.state, p.context), H = 0; H < p._sb.length; H++)p.__h.push(p._sb[H]);\n            p._sb = [];\n        } else do {\n            p.__d = !1, $ && $(u), a = p.render(p.props, p.state, p.context), p.state = p.__s;\n        }while (p.__d && ++I < 25);\n        p.state = p.__s, null != p.getChildContext && (i = d(d({}, i), p.getChildContext())), h || null == p.getSnapshotBeforeUpdate || (x = p.getSnapshotBeforeUpdate(v, _)), S(n, y(T = null != a && a.type === k && null == a.key ? a.props.children : a) ? T : [\n            T\n        ], u, t, i, o, r, e, f, c, s), p.base = u.__e, u.__u &= -161, p.__h.length && e.push(p), g && (p.__E = p.__ = null);\n    } catch (n) {\n        u.__v = null, c || null != r ? (u.__e = f, u.__u |= c ? 160 : 32, r[r.indexOf(f)] = null) : (u.__e = t.__e, u.__k = t.__k), l.__e(n, u, t);\n    }\n    else null == r && u.__v === t.__v ? (u.__k = t.__k, u.__e = t.__e) : u.__e = O(t.__e, u, t, i, o, r, e, c, s);\n    (a = l.diffed) && a(u);\n}\nfunction M(n, u, t) {\n    u.__d = void 0;\n    for(var i = 0; i < t.length; i++)j(t[i], t[++i], t[++i]);\n    l.__c && l.__c(u, n), n.some(function(u) {\n        try {\n            n = u.__h, u.__h = [], n.some(function(n) {\n                n.call(u);\n            });\n        } catch (n) {\n            l.__e(n, u.__v);\n        }\n    });\n}\nfunction O(l, u, t, i, o, r, e, f, c) {\n    var s, a, h, v, d, x, g, k = t.props, b = u.props, m = u.type;\n    if (\"svg\" === m && (o = !0), null != r) {\n        for(s = 0; s < r.length; s++)if ((d = r[s]) && \"setAttribute\" in d == !!m && (m ? d.localName === m : 3 === d.nodeType)) {\n            l = d, r[s] = null;\n            break;\n        }\n    }\n    if (null == l) {\n        if (null === m) return document.createTextNode(b);\n        l = o ? document.createElementNS(\"http://www.w3.org/2000/svg\", m) : document.createElement(m, b.is && b), r = null, f = !1;\n    }\n    if (null === m) k === b || f && l.data === b || (l.data = b);\n    else {\n        if (r = r && n.call(l.childNodes), k = t.props || p, !f && null != r) for(k = {}, s = 0; s < l.attributes.length; s++)k[(d = l.attributes[s]).name] = d.value;\n        for(s in k)if (d = k[s], \"children\" == s) ;\n        else if (\"dangerouslySetInnerHTML\" == s) h = d;\n        else if (\"key\" !== s && !(s in b)) {\n            if (\"value\" == s && \"defaultValue\" in b || \"checked\" == s && \"defaultChecked\" in b) continue;\n            A(l, s, null, d, o);\n        }\n        for(s in b)d = b[s], \"children\" == s ? v = d : \"dangerouslySetInnerHTML\" == s ? a = d : \"value\" == s ? x = d : \"checked\" == s ? g = d : \"key\" === s || f && \"function\" != typeof d || k[s] === d || A(l, s, d, k[s], o);\n        if (a) f || h && (a.__html === h.__html || a.__html === l.innerHTML) || (l.innerHTML = a.__html), u.__k = [];\n        else if (h && (l.innerHTML = \"\"), S(l, y(v) ? v : [\n            v\n        ], u, t, i, o && \"foreignObject\" !== m, r, e, r ? r[0] : t.__k && w(t, 0), f, c), null != r) for(s = r.length; s--;)null != r[s] && _(r[s]);\n        f || (s = \"value\", void 0 !== x && (x !== l[s] || \"progress\" === m && !x || \"option\" === m && x !== k[s]) && A(l, s, x, k[s], !1), s = \"checked\", void 0 !== g && g !== l[s] && A(l, s, g, k[s], !1));\n    }\n    return l;\n}\nfunction j(n, u, t) {\n    try {\n        \"function\" == typeof n ? n(u) : n.current = u;\n    } catch (n) {\n        l.__e(n, t);\n    }\n}\nfunction z(n, u, t) {\n    var i, o;\n    if (l.unmount && l.unmount(n), (i = n.ref) && (i.current && i.current !== n.__e || j(i, null, u)), null != (i = n.__c)) {\n        if (i.componentWillUnmount) try {\n            i.componentWillUnmount();\n        } catch (n) {\n            l.__e(n, u);\n        }\n        i.base = i.__P = null;\n    }\n    if (i = n.__k) for(o = 0; o < i.length; o++)i[o] && z(i[o], u, t || \"function\" != typeof n.type);\n    t || null == n.__e || _(n.__e), n.__c = n.__ = n.__e = n.__d = void 0;\n}\nfunction N(n, l, u) {\n    return this.constructor(n, u);\n}\nfunction V(u, t, i) {\n    var o, r, e, f;\n    l.__ && l.__(u, t), r = (o = \"function\" == typeof i) ? null : i && i.__k || t.__k, e = [], f = [], L(t, u = (!o && i || t).__k = x(k, null, [\n        u\n    ]), r || p, p, void 0 !== t.ownerSVGElement, !o && i ? [\n        i\n    ] : r ? null : t.firstChild ? n.call(t.childNodes) : null, e, !o && i ? i : r ? r.__e : t.firstChild, o, f), M(e, u, f);\n}\nn = h.slice, l = {\n    __e: function(n, l, u, t) {\n        for(var i, o, r; l = l.__;)if ((i = l.__c) && !i.__) try {\n            if ((o = i.constructor) && null != o.getDerivedStateFromError && (i.setState(o.getDerivedStateFromError(n)), r = i.__d), null != i.componentDidCatch && (i.componentDidCatch(n, t || {}), r = i.__d), r) return i.__E = i;\n        } catch (l) {\n            n = l;\n        }\n        throw n;\n    }\n}, u = 0, t = function(n) {\n    return null != n && null == n.constructor;\n}, b.prototype.setState = function(n, l) {\n    var u;\n    u = null != this.__s && this.__s !== this.state ? this.__s : this.__s = d({}, this.state), \"function\" == typeof n && (n = n(d({}, u), this.props)), n && d(u, n), null != n && this.__v && (l && this._sb.push(l), C(this));\n}, b.prototype.forceUpdate = function(n) {\n    this.__v && (this.__e = !0, n && this.__h.push(n), C(this));\n}, b.prototype.render = k, i = [], r = \"function\" == typeof Promise ? Promise.prototype.then.bind(Promise.resolve()) : setTimeout, e = function(n, l) {\n    return n.__v.__b - l.__v.__b;\n}, P.__r = 0, f = 0, c = F(!1), s = F(!0), a = 0, exports.Component = b, exports.Fragment = k, exports.cloneElement = function(l, u, t) {\n    var i, o, r, e, f = d({}, l.props);\n    for(r in l.type && l.type.defaultProps && (e = l.type.defaultProps), u)\"key\" == r ? i = u[r] : \"ref\" == r ? o = u[r] : f[r] = void 0 === u[r] && void 0 !== e ? e[r] : u[r];\n    return arguments.length > 2 && (f.children = arguments.length > 3 ? n.call(arguments, 2) : t), g(l.type, f, i || l.key, o || l.ref, null);\n}, exports.createContext = function(n, l) {\n    var u = {\n        __c: l = \"__cC\" + a++,\n        __: n,\n        Consumer: function(n, l) {\n            return n.children(l);\n        },\n        Provider: function(n) {\n            var u, t;\n            return this.getChildContext || (u = [], (t = {})[l] = this, this.getChildContext = function() {\n                return t;\n            }, this.shouldComponentUpdate = function(n) {\n                this.props.value !== n.value && u.some(function(n) {\n                    n.__e = !0, C(n);\n                });\n            }, this.sub = function(n) {\n                u.push(n);\n                var l = n.componentWillUnmount;\n                n.componentWillUnmount = function() {\n                    u.splice(u.indexOf(n), 1), l && l.call(n);\n                };\n            }), n.children;\n        }\n    };\n    return u.Provider.__ = u.Consumer.contextType = u;\n}, exports.createElement = x, exports.createRef = function() {\n    return {\n        current: null\n    };\n}, exports.h = x, exports.hydrate = function n(l, u) {\n    V(l, u, n);\n}, exports.isValidElement = t, exports.options = l, exports.render = V, exports.toChildArray = function n(l, u) {\n    return u = u || [], null == l || \"boolean\" == typeof l || (y(l) ? l.some(function(l) {\n        n(l, u);\n    }) : u.push(l)), u;\n}; //# sourceMappingURL=preact.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/preact/dist/preact.js\n");

/***/ })

};
;